Task M3.


testIsGameOver

Hypothesis 1: There is an error in code checking if all food is gone.
Hypothesis 2: There is an error in code checking if pacman is caught.
Hypothesis 3: It might be a faulty test.

Hypothesis 1: Accepted. existsFood is already declared false and when there is not food on the position, existsFood
    gets overwritten.
Hypothesis 2: Rejected.
Hypothesis 3: Rejected.


testMoveTo

This was a faulty test, because the coordinates refer to the wall.


testAddSprite

Tests are faulty because


testMakeMove

Hypothesis 1: Helper method is wrong.
Hypothesis 2: There might be wrong coordinates.
Hypothesis 3: Some math operators might be used wrong.

Hypothesis 1: Accepted. In the helper methods getHorizontalDirectionToPacman() and getVerticalDirectionToPacman()
    directions were not right since they moved the monster further from pacman instead of moving the monster closer
    to the pacman.
Hypothesis 2: Rejected.
Hypothesis 3: Rejected.



Task M4.

1. ArrayList, LinkedList and List are three classes imported in Board class.
2. Board class is in model package.
3. BOARD_HEIGHT, BOARD_WIDTH and BOARD_DEFN are three static fields in Board class.
4. board, pacman, randomMonsters, trackerMonsters are four instance fields in Board class.
5. private void initBoard() is method header for a private method, public void tickBoard() is method header for a
    public method.
6. <package statement>;
   <import statements> ;
   <class header> {
        <field declarations>;
        <method declarations>;
   }

7. package ca.ubc.cs.util;
   import java.util.LinkedList;
   public class ListUtilities {
        public LinkedList data;
        public LinkedList getData() {
            return data;
        }
   }

8. First difference is different naming conventions. A constructor is called same name as a class, and a method is
    called as a verb or sometimes several words starting with a small letter and each new word beginning with a
    capital letter.
9. public ListUtilities()



Task M5.

1. It is useful to set up several breakpoints in the code so it is easier to track variable changes. Since there are
    set breakpoints we will see all required information and its changes.
2. Hypotheses are useful in finding places for setting breakpoints during debugging process.